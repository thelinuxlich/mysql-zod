import $ from"node:path";import C from"fs-extra";import T from"knex";import p from"camelcase";function w(t,u,l){const b=l.nullish&&l.nullish===!0,s=l.requiredString&&l.requiredString===!0,d=t.split("(")[0].split(" ")[0],o=u==="YES",a=["z.string()"],i=["z.number()"],e=["z.coerce.boolean()"],r=b?"nullish()":"nullable()",c="nonnegative()",n="min(1)";switch(d){case"date":case"datetime":case"timestamp":case"time":case"year":case"char":case"varchar":case"tinytext":case"text":case"mediumtext":case"longtext":case"json":case"decimal":return o?a.push(r):s&&a.push(n),a.join(".");case"tinyint":return o&&e.push(r),e.join(".");case"smallint":case"mediumint":case"int":case"bigint":case"float":case"double":return t.endsWith(" unsigned")&&i.push(c),o&&i.push(r),i.join(".");case"enum":return`z.enum([${t.replace("enum(","").replace(")","").replace(/,/g,", ")}])`}}async function j(t){const u=T({client:"mysql2",connection:{host:t.host,port:t.port,user:t.user,password:t.password,database:t.database,ssl:t.ssl??{}}}),l=t.camelCase&&t.camelCase===!0;let s=(await u.raw("SELECT table_name as table_name FROM information_schema.tables WHERE table_schema = ?",[t.database]))[0].map(e=>e.table_name).filter(e=>!e.startsWith("knex_")).sort();const d=t.tables;d&&d.length&&(s=s.filter(e=>d.includes(e)));const o=t.ignore,a=o?.filter(e=>e.startsWith("/")&&e.endsWith("/")),i=o?.filter(e=>!a?.includes(e));i&&i.length&&(s=s.filter(e=>!i.includes(e))),a&&a.length&&(s=s.filter(e=>{let r=!0;return a.forEach(c=>{const n=c.substring(1,c.length-1);e.match(n)!==null&&(r=!1)}),r}));for(let e of s){const c=(await u.raw(`DESC ${e}`))[0];l&&(e=p(e));let n=`import z from 'zod'

export const ${e} = z.object({`;for(const m of c){const y=l?p(m.Field):m.Field,x=w(m.Type,m.Null,t);n=`${n}
  ${y}: ${x},`}n=`${n}
})

export type ${p(`${e}Type`)} = z.infer<typeof ${e}>
`;const f=t.folder&&t.folder!==""?t.folder:".",h=t.suffix&&t.suffix!==""?`${e}.${t.suffix}.ts`:`${e}.ts`,g=$.join(f,h);console.log("Created:",g),C.outputFileSync(g,n)}await u.destroy()}export{j as generate};
